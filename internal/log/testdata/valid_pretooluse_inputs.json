[
  {
    "name": "the-architect_basic",
    "description": "Basic architect agent with standard session and agent IDs",
    "input": {
      "session_id": "dev-arch-session-001",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Design microservices architecture",
        "prompt": "SessionId: dev-arch-session-001 AgentId: arch-001\n\nDesign a scalable microservices architecture for an e-commerce platform that can handle 50,000 concurrent users, support multiple payment gateways, and provide real-time inventory management across multiple warehouses.",
        "subagent_type": "the-architect"
      }
    }
  },
  {
    "name": "the-developer_with_code",
    "description": "Developer agent with code implementation task",
    "input": {
      "session_id": "dev-dev-session-002",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Implement user authentication with JWT",
        "prompt": "SessionId: dev-dev-session-002 AgentId: dev-002\n\nImplement a secure user authentication system using JWT tokens with the following requirements:\n\n1. Email/password login\n2. Password strength validation\n3. Rate limiting for login attempts\n4. JWT token refresh mechanism\n5. Role-based access control\n\nUse Go with the gin framework and implement proper error handling.",
        "subagent_type": "the-developer"
      }
    }
  },
  {
    "name": "the-tester_comprehensive",
    "description": "Tester agent with comprehensive testing strategy",
    "input": {
      "session_id": "dev-test-session-003",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Create comprehensive test suite for API endpoints",
        "prompt": "SessionId: dev-test-session-003 AgentId: test-003\n\nCreate a comprehensive test suite for the user authentication API endpoints including:\n\n- Unit tests for all authentication functions\n- Integration tests for API endpoints\n- End-to-end tests for user workflows\n- Performance tests for concurrent login scenarios\n- Security tests for common attack vectors\n\nEnsure >90% code coverage and include both positive and negative test cases.",
        "subagent_type": "the-tester"
      }
    }
  },
  {
    "name": "the-reviewer_security_focused",
    "description": "Reviewer agent focused on security review",
    "input": {
      "session_id": "dev-review-session-004",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Conduct security code review",
        "prompt": "SessionId: dev-review-session-004 AgentId: review-004\n\nConduct a comprehensive security code review of the authentication module focusing on:\n\n1. SQL injection vulnerabilities\n2. Cross-site scripting (XSS) prevention\n3. CSRF protection implementation\n4. Password hashing and storage security\n5. JWT token security best practices\n6. Input validation and sanitization\n7. Error handling that doesn't leak sensitive information\n\nProvide specific recommendations for any issues found.",
        "subagent_type": "the-reviewer"
      }
    }
  },
  {
    "name": "the-optimizer_performance",
    "description": "Optimizer agent for performance optimization",
    "input": {
      "session_id": "dev-opt-session-005",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Optimize database queries and API performance",
        "prompt": "SessionId: dev-opt-session-005 AgentId: opt-005\n\nOptimize the application performance with focus on:\n\n1. Database query optimization (identify N+1 queries)\n2. API response time improvements\n3. Memory usage optimization\n4. Caching strategy implementation\n5. Connection pooling optimization\n6. Query result pagination\n7. Background job processing efficiency\n\nTarget: <200ms API response time for 95% of requests under 1000 concurrent users.",
        "subagent_type": "the-optimizer"
      }
    }
  },
  {
    "name": "unicode_content",
    "description": "Agent with Unicode characters in prompt and description",
    "input": {
      "session_id": "dev-unicode-session-006",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Implement i18n support with émojis 🌍 and ünìcödé characters",
        "prompt": "SessionId: dev-unicode-session-006 AgentId: i18n-006\n\nImplement internationalization (i18n) support for multiple languages including:\n\n🇺🇸 English\n🇫🇷 Français (French) with accents: café, résumé, naïve\n🇪🇸 Español with special chars: niño, piña, jalapeño  \n🇩🇪 Deutsch with umlauts: Müller, Büro, Größe\n🇷🇺 Русский (Russian) with Cyrillic: Привет мир\n🇨🇳 中文 (Chinese) with characters: 你好世界\n🇯🇵 日本語 (Japanese) with mixed scripts: こんにちは世界\n🇦🇪 العربية (Arabic) with RTL text: مرحبا بالعالم\n\nInclude emoji support 🚀✨🎉 and handle various Unicode edge cases.",
        "subagent_type": "the-internationalizer"
      }
    }
  },
  {
    "name": "special_characters",
    "description": "Agent with special characters and escape sequences",
    "input": {
      "session_id": "dev-special-session-007",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Handle \"quoted\" strings, \nnewlines, \ttabs, and \\backslashes",
        "prompt": "SessionId: dev-special-session-007 AgentId: special-007\n\nImplement robust string processing that handles:\n\n1. Quoted strings: \"double quotes\", 'single quotes'\n2. Escape sequences: \\n newlines, \\t tabs, \\r carriage returns\n3. Backslashes: \\path\\to\\file, C:\\\\Users\\\\Name\n4. JSON special chars: {\"key\": \"value\", \"array\": [1, 2, 3]}\n5. SQL injection attempts: '; DROP TABLE users; --\n6. XSS attempts: <script>alert('xss')</script>\n7. Control characters: \\u0000 - \\u001F\n8. High ASCII: ½ ± ÷ × ° ²\n\nEnsure proper sanitization and encoding.",
        "subagent_type": "the-sanitizer"
      }
    }
  },
  {
    "name": "long_prompt",
    "description": "Agent with very long prompt to test large content handling",
    "input": {
      "session_id": "dev-long-session-008",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Process large document with detailed requirements",
        "prompt": "SessionId: dev-long-session-008 AgentId: long-008\n\nImplement a comprehensive document management system with the following detailed requirements:\n\n1. Feature requirement with detailed specification that includes multiple sub-requirements, implementation notes, security considerations, performance targets, testing requirements, documentation needs, and maintenance procedures. 1. Feature requirement with detailed specification that includes multiple sub-requirements, implementation notes, security considerations, performance targets, testing requirements, documentation needs, and maintenance procedures. 1. Feature requirement with detailed specification that includes multiple sub-requirements, implementation notes, security considerations, performance targets, testing requirements, documentation needs, and maintenance procedures. 1. Feature requirement with detailed specification that includes multiple sub-requirements, implementation notes, security considerations, performance targets, testing requirements, documentation needs, and maintenance procedures. 1. Feature requirement with detailed specification that includes multiple sub-requirements, implementation notes, security considerations, performance targets, testing requirements, documentation needs, and maintenance procedures. \n\nThis system must handle enterprise-scale document processing with high availability, scalability, and security requirements.",
        "subagent_type": "the-documenter"
      }
    }
  },
  {
    "name": "missing_session_id",
    "description": "Agent without SessionId in prompt (should fallback to session discovery)",
    "input": {
      "session_id": "dev-fallback-session-009",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Handle missing session ID scenario",
        "prompt": "AgentId: fallback-009\n\nHandle the scenario where session ID is not provided in the prompt and must be discovered through other means. This tests the fallback mechanism for session identification.",
        "subagent_type": "the-fallback-handler"
      }
    }
  },
  {
    "name": "missing_agent_id",
    "description": "Agent without AgentId in prompt (should handle gracefully)",
    "input": {
      "session_id": "dev-no-agent-session-010",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Handle missing agent ID scenario",
        "prompt": "SessionId: dev-no-agent-session-010\n\nHandle the scenario where agent ID is not provided in the prompt. The system should gracefully handle this case and still log the event appropriately.",
        "subagent_type": "the-agent-id-handler"
      }
    }
  },
  {
    "name": "alternative_session_format",
    "description": "Agent with alternative SessionId format (without colon)",
    "input": {
      "session_id": "dev-alt-format-011",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Test alternative session ID format",
        "prompt": "SessionId alt-format-011 AgentId: alt-011\n\nTest handling of alternative session ID formats that might not include colons or have different spacing patterns.",
        "subagent_type": "the-format-tester"
      }
    }
  },
  {
    "name": "multiple_session_ids",
    "description": "Agent with multiple session IDs in prompt (should use first one)",
    "input": {
      "session_id": "dev-multi-session-012",
      "transcript_path": "/path/to/transcript.jsonl",
      "cwd": "/project/root",
      "hook_event_name": "PreToolUse",
      "tool_name": "Task",
      "tool_input": {
        "description": "Test multiple session IDs in prompt",
        "prompt": "SessionId: first-session-012 AgentId: multi-012\n\nThis prompt contains multiple session references: SessionId: second-session-012 and SessionId: third-session-012. The system should handle this appropriately.",
        "subagent_type": "the-multi-handler"
      }
    }
  }
]